/*
 * virusapi
 * The Cloudmersive Virus Scan API lets you scan files and content for viruses and identify security issues with content.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.46
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudmersiveVirusApiClient);
  }
}(this, function(expect, CloudmersiveVirusApiClient) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('WebsiteScanResult', function() {
      beforeEach(function() {
        instance = new CloudmersiveVirusApiClient.WebsiteScanResult();
      });

      it('should create an instance of WebsiteScanResult', function() {
        // TODO: update the code to test WebsiteScanResult
        expect(instance).to.be.a(CloudmersiveVirusApiClient.WebsiteScanResult);
      });

      it('should have the property CleanResult (base name: "CleanResult")', function() {
        // TODO: update the code to test the property CleanResult
        expect(instance).to.have.property('CleanResult');
        // expect(instance.CleanResult).to.be(expectedValueLiteral);
      });

      it('should have the property WebsiteThreatType (base name: "WebsiteThreatType")', function() {
        // TODO: update the code to test the property WebsiteThreatType
        expect(instance).to.have.property('WebsiteThreatType');
        // expect(instance.WebsiteThreatType).to.be(expectedValueLiteral);
      });

      it('should have the property FoundViruses (base name: "FoundViruses")', function() {
        // TODO: update the code to test the property FoundViruses
        expect(instance).to.have.property('FoundViruses');
        // expect(instance.FoundViruses).to.be(expectedValueLiteral);
      });

      it('should have the property WebsiteHttpResponseCode (base name: "WebsiteHttpResponseCode")', function() {
        // TODO: update the code to test the property WebsiteHttpResponseCode
        expect(instance).to.have.property('WebsiteHttpResponseCode');
        // expect(instance.WebsiteHttpResponseCode).to.be(expectedValueLiteral);
      });

    });
  });

}));
