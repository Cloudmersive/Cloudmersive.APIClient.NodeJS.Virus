/**
 * virusapi
 * The Cloudmersive Virus Scan API lets you scan files and content for viruses and identify security issues with content.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudmersiveVirusApiClient);
  }
}(this, function(expect, CloudmersiveVirusApiClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudmersiveVirusApiClient.CloudStorageAdvancedVirusScanResult();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CloudStorageAdvancedVirusScanResult', function() {
    it('should create an instance of CloudStorageAdvancedVirusScanResult', function() {
      // uncomment below and update the code to test CloudStorageAdvancedVirusScanResult
      //var instane = new CloudmersiveVirusApiClient.CloudStorageAdvancedVirusScanResult();
      //expect(instance).to.be.a(CloudmersiveVirusApiClient.CloudStorageAdvancedVirusScanResult);
    });

    it('should have the property successful (base name: "Successful")', function() {
      // uncomment below and update the code to test the property successful
      //var instane = new CloudmersiveVirusApiClient.CloudStorageAdvancedVirusScanResult();
      //expect(instance).to.be();
    });

    it('should have the property cleanResult (base name: "CleanResult")', function() {
      // uncomment below and update the code to test the property cleanResult
      //var instane = new CloudmersiveVirusApiClient.CloudStorageAdvancedVirusScanResult();
      //expect(instance).to.be();
    });

    it('should have the property containsExecutable (base name: "ContainsExecutable")', function() {
      // uncomment below and update the code to test the property containsExecutable
      //var instane = new CloudmersiveVirusApiClient.CloudStorageAdvancedVirusScanResult();
      //expect(instance).to.be();
    });

    it('should have the property containsInvalidFile (base name: "ContainsInvalidFile")', function() {
      // uncomment below and update the code to test the property containsInvalidFile
      //var instane = new CloudmersiveVirusApiClient.CloudStorageAdvancedVirusScanResult();
      //expect(instance).to.be();
    });

    it('should have the property containsScript (base name: "ContainsScript")', function() {
      // uncomment below and update the code to test the property containsScript
      //var instane = new CloudmersiveVirusApiClient.CloudStorageAdvancedVirusScanResult();
      //expect(instance).to.be();
    });

    it('should have the property containsPasswordProtectedFile (base name: "ContainsPasswordProtectedFile")', function() {
      // uncomment below and update the code to test the property containsPasswordProtectedFile
      //var instane = new CloudmersiveVirusApiClient.CloudStorageAdvancedVirusScanResult();
      //expect(instance).to.be();
    });

    it('should have the property containsRestrictedFileFormat (base name: "ContainsRestrictedFileFormat")', function() {
      // uncomment below and update the code to test the property containsRestrictedFileFormat
      //var instane = new CloudmersiveVirusApiClient.CloudStorageAdvancedVirusScanResult();
      //expect(instance).to.be();
    });

    it('should have the property containsMacros (base name: "ContainsMacros")', function() {
      // uncomment below and update the code to test the property containsMacros
      //var instane = new CloudmersiveVirusApiClient.CloudStorageAdvancedVirusScanResult();
      //expect(instance).to.be();
    });

    it('should have the property verifiedFileFormat (base name: "VerifiedFileFormat")', function() {
      // uncomment below and update the code to test the property verifiedFileFormat
      //var instane = new CloudmersiveVirusApiClient.CloudStorageAdvancedVirusScanResult();
      //expect(instance).to.be();
    });

    it('should have the property foundViruses (base name: "FoundViruses")', function() {
      // uncomment below and update the code to test the property foundViruses
      //var instane = new CloudmersiveVirusApiClient.CloudStorageAdvancedVirusScanResult();
      //expect(instance).to.be();
    });

    it('should have the property errorDetailedDescription (base name: "ErrorDetailedDescription")', function() {
      // uncomment below and update the code to test the property errorDetailedDescription
      //var instane = new CloudmersiveVirusApiClient.CloudStorageAdvancedVirusScanResult();
      //expect(instance).to.be();
    });

    it('should have the property fileSize (base name: "FileSize")', function() {
      // uncomment below and update the code to test the property fileSize
      //var instane = new CloudmersiveVirusApiClient.CloudStorageAdvancedVirusScanResult();
      //expect(instance).to.be();
    });

    it('should have the property contentInformation (base name: "ContentInformation")', function() {
      // uncomment below and update the code to test the property contentInformation
      //var instane = new CloudmersiveVirusApiClient.CloudStorageAdvancedVirusScanResult();
      //expect(instance).to.be();
    });

  });

}));
